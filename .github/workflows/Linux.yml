name: CI-Ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Download ngrok
      run: |
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip -O ngrok.zip
        unzip ngrok.zip -d ngrok

    - name: Auth ngrok
      run: ./ngrok/ngrok authtoken $NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    # Configurazione SSH per accesso remoto (alternativa a RDP su Windows)
    - name: Install and configure SSH server
      run: |
        sudo apt update
        sudo apt install openssh-server -y
        sudo systemctl enable ssh
        sudo systemctl start ssh

    - name: Create user and set password
      run: |
        sudo useradd -m $WIN_USERNAME
        echo "$WIN_USERNAME:$WIN_PASS" | sudo chpasswd
        sudo usermod -aG sudo $WIN_USERNAME
      env:
        WIN_USERNAME: ${{ secrets.WIN_USERNAME }}
        WIN_PASS: ${{ secrets.WIN_PASS }}

    - name: Start ngrok tunnel (SSH)
      run: nohup ./ngrok/ngrok tcp 22 &

    - name: Wait for stopVPS.inf (simulazione su Linux)
      run: |
        echo "Waiting for ~/Desktop/stopVPS.inf..."
        while [ ! -f "/home/${{ secrets.WIN_USERNAME }}/Desktop/stopVPS.inf" ]; do
          sleep 10
        done
        echo "stopVPS.inf found, continuing..."

    - name: Kill ngrok tunnel
      run: pkill ngrok || echo "ngrok already stopped"

    - name: Upload Minecraft folder (if exists)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: linux-minecraft
        path: /home/${{ secrets.WIN_USERNAME }}/Desktop/Minecraft
